{{- range $id, $subscriber := .Values.subscribers }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $id }}
spec:
  {{- if not $subscriber.enableKeda }}
  replicas: {{ if $.Values.isEnabled }}1{{ else }}0{{ end }}
  {{- end }}
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 100%
  selector:
    matchLabels:
      app: sub-{{ $id }}
  template:
    metadata:
      labels:
        app: sub-{{ $id }}
    spec:
      serviceAccountName: cancer
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        fsGroup: 1000
      containers:
        - name: app
          image: {{ $.Values.image }}:{{ $.Values.appVersion }}
          args: {{ $subscriber.args | toJson }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
          resources: {{ $subscriber.resources | default $.Values.defaultResources | toJson }}
          env:
            {{- range $k, $v := ($subscriber.env | default dict) }}
            - name: {{ $k }}
              value: {{ $v }}
            {{- end }}
            {{- if $subscriber.enableScratchSpace }}
            - name: STORAGE_DIR
              value: "/scratch"
            {{- end }}
          envFrom:
            - secretRef:
                name: base
            - secretRef:
                name: nats
          {{- if $subscriber.enableScratchSpace }}
          volumeMounts:
            - mountPath: "/scratch"
              name: downloads
          {{- end }}
      volumes:
        - {{ include "downloads.volume" $ | fromYaml | toJson }}

{{- if $subscriber.enableKeda }}
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: {{ $id }}
spec:
  maxReplicaCount: 1
  minReplicaCount: 0
  scaleTargetRef:
    name: {{ $id }}
  triggers:
    - type: nats-jetstream
      metadata:
        natsServerMonitoringEndpoint: {{ $.Values.nats.monitorEndpoint | quote }}
        account: "$G"
        stream: {{ $.Values.nats.streamName | quote }}
        consumer: {{ printf "%s.%s" $.Values.nats.streamName $subscriber.env.DOWNLOAD_TYPE | quote }}
{{- end }}
{{- end }}
